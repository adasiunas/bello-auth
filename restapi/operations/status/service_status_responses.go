// Code generated by go-swagger; DO NOT EDIT.

package status

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	apimodel "github.com/adasiunas/bello-auth/apimodel"
)

// ServiceStatusOKCode is the HTTP code returned for type ServiceStatusOK
const ServiceStatusOKCode int = 200

/*ServiceStatusOK Status response

swagger:response serviceStatusOK
*/
type ServiceStatusOK struct {

	/*
	  In: Body
	*/
	Payload *apimodel.StatusResponse `json:"body,omitempty"`
}

// NewServiceStatusOK creates ServiceStatusOK with default headers values
func NewServiceStatusOK() *ServiceStatusOK {

	return &ServiceStatusOK{}
}

// WithPayload adds the payload to the service status o k response
func (o *ServiceStatusOK) WithPayload(payload *apimodel.StatusResponse) *ServiceStatusOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service status o k response
func (o *ServiceStatusOK) SetPayload(payload *apimodel.StatusResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceStatusOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ServiceStatusInternalServerErrorCode is the HTTP code returned for type ServiceStatusInternalServerError
const ServiceStatusInternalServerErrorCode int = 500

/*ServiceStatusInternalServerError Service down

swagger:response serviceStatusInternalServerError
*/
type ServiceStatusInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *apimodel.ErrorResponse `json:"body,omitempty"`
}

// NewServiceStatusInternalServerError creates ServiceStatusInternalServerError with default headers values
func NewServiceStatusInternalServerError() *ServiceStatusInternalServerError {

	return &ServiceStatusInternalServerError{}
}

// WithPayload adds the payload to the service status internal server error response
func (o *ServiceStatusInternalServerError) WithPayload(payload *apimodel.ErrorResponse) *ServiceStatusInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the service status internal server error response
func (o *ServiceStatusInternalServerError) SetPayload(payload *apimodel.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ServiceStatusInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
